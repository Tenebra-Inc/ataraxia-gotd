# Probably gonna switch from spawning DNPC at start to encounter spawning. SNPC stay the same. (less to compute, easier to handle)
1. Split routine into navigation module and routine module. Premade paths for now.
1.1 Make work class into Resource: BaseWork -> custom works from there
1.2 Give routine stamina. Decrease on work, increase on rest at home \ sppoint
2*. Switch to 'characters present' system, less resources\code, same functionality
2.1 Maybe leave static npcs as iteractable entities in scene?
2.2 Remove DNPC objects, replace with encounters with character menu \ sprite placeholder.
2.3 'Characters present' will have iteractable "known characters" and "crowd", which can generate DNPCs to iteract with
2.4 From-crowd generation is tied to population and race distribution of the town\area.
2.5 Make NPC container for scenes, easy way to handle NPC movement
3. Part 2 will solve most of DNPC amount scaling issues, movement, iteraction, map and etc.
3.1 Plus it enables correct out-of-sight processing for NPCs
4. Make home scenes, keep them active on town active, out of screen.
5. Keep track of performance \ resource usage.
6. Change PropertyController into global script.
7. I gonna rewrite whole thing for scratch, too many things to change.